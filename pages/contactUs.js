import Header from 'components/header/Header'
import Head from 'next/head'
import Footer from 'components/sections/footer'
import ReadyToSellPage from 'components/sections/readyToSell'
import Button from 'components/input/Button'
import useToast from 'lib/hooks/useToast'
import { Controller, useForm } from 'react-hook-form'
import TextInput2 from 'components/input/TextInputSecondary'
import { useState } from 'react'
import ContactApis from 'lib/services/contact.services'
import useApi from 'lib/hooks/useApi'
import { errorSetter } from 'lib/utils/helper'

const TermsAndConditions = () => {
    const { success, error } = useToast()
    const [loading, setLoading] = useState()
    const [subjectType, setSubjectType] = useState('general')

    const API_postEnquiry = useApi(ContactApis.postAQuery)

    // use forms initialization
    const {
        reset,
        watch,
        control,
        setError,
        clearErrors,
        handleSubmit,
        formState: { errors },
    } = useForm({
        defaultValues: {
            first_name: '',
            last_name: '',
            email: '',
            phone: '',
            query_type: '',
            message: '',
        },
    })

    const onSubmit = () => {
        clearErrors()
        handleSubmit(async (params) => {
            setLoading(true)
            try {
                const payload = {
                    ...params,
                    query_type:
                        subjectType === 'general' ? 'General inquiry' : 'Other',
                }
                const response = await API_postEnquiry.request(payload)

                if (response?.isError) {
                    setLoading(false)
                    error('Failed to submit')
                    errorSetter(response?.errors, setError)
                } else {
                    reset()
                    success(
                        'Thank you for reaching out to us. Your query has been successfully submitted, and our team will get back to you as soon as possible.'
                    )
                    setSubjectType('general')
                    setLoading(false)
                }
            } catch (error) {
                setLoading(false)
            }
        })()
    }

    return (
        <div>
            <Head>
                <title>Wheeliyo</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <div className="flex flex-col justify-center items-center px-4 lg:px-10">
                <h2 className="w-full text-center pb-16 text-[30px] headline pt-8">
                    Get in touch
                </h2>
                <div className="w-full max-w-[1196px] bg-white rounded-3xl shadow-xl px-[16px] py-[16px]">
                    <div className="w-full flex flex-wrap">
                        <div className="w-full max-w-full lg:max-w-[491px] global-gradient rounded-2xl overflow-hidden">
                            <div className="w-full h-full p-8 text-white medium-circle large-circle">
                                <h2>Contact Information</h2>
                                <p>Say something to start a live chat!</p>
                                <ul className="pt-8 lg:pt-28 pb-52">
                                    <li className="flex items-center pb-8">
                                        <span className="w-5 h-5 block">
                                            <img
                                                className="w-full"
                                                src="/assets/phone.png"
                                            />
                                        </span>
                                        <span className="pl-4">
                                            +91 93537 74104
                                        </span>
                                    </li>
                                    <li className="flex items-center pb-8">
                                        <span className="w-5 h-5 block">
                                            <img
                                                className="w-full"
                                                src="/assets/email.png"
                                            />
                                        </span>
                                        <span className="pl-4">
                                            wheeliyo@gmail.com
                                        </span>
                                    </li>
                                    <li className="flex items-center">
                                        <span className="w-5 h-5 block">
                                            <img
                                                className="w-full"
                                                src="/assets/location.png"
                                            />
                                        </span>
                                        <span className="pl-4">
                                            No 19/35, Mount road, Little mount,
                                            Chennai, Tamilnadu 600015.
                                        </span>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div className="w-full lg:w-[calc(100%-491px)]">
                            <div className="w-full p-5 bg-white">
                                <ul className="w-full flex flex-wrap">
                                    <li className="w-full sm:w-1/2 p-4">
                                        <span className="w-full block">
                                            <label className="text-xs">
                                                First name
                                            </label>

                                            <Controller
                                                control={control}
                                                rules={{
                                                    required:
                                                        'First name is required',
                                                    pattern: {
                                                        value: /^[A-Za-z\s]{1,50}$/,
                                                        message:
                                                            'First name should only contain letters and spaces, and be between 1 and 50 characters long',
                                                    },
                                                }}
                                                render={({
                                                    field: { onChange, value },
                                                }) => (
                                                    <TextInput2
                                                        placeholder="First Name"
                                                        value={value}
                                                        error={
                                                            errors.first_name
                                                        }
                                                        onChange={onChange}
                                                    />
                                                )}
                                                name="first_name"
                                            />
                                        </span>
                                    </li>
                                    <li className="w-full sm:w-1/2 p-4">
                                        <span className="w-full block">
                                            <label className="text-xs">
                                                Last name
                                            </label>
                                            <Controller
                                                control={control}
                                                rules={{
                                                    required:
                                                        'Last name is required',
                                                    pattern: {
                                                        value: /^[A-Za-z\s]{1,50}$/,
                                                        message:
                                                            'Last name should only contain letters and spaces, and be between 1 and 50 characters long',
                                                    },
                                                }}
                                                render={({
                                                    field: { onChange, value },
                                                }) => (
                                                    <TextInput2
                                                        placeholder="Last Name"
                                                        value={value}
                                                        error={errors.last_name}
                                                        onChange={onChange}
                                                    />
                                                )}
                                                name="last_name"
                                            />
                                        </span>
                                    </li>
                                    <li className="w-full sm:w-1/2 p-4">
                                        <span className="w-full block">
                                            <label className="text-xs">
                                                Email
                                            </label>
                                            <Controller
                                                control={control}
                                                rules={{
                                                    required:
                                                        'Email is required',
                                                    pattern: {
                                                        value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/i,
                                                        message:
                                                            'Email is invalid.',
                                                    },
                                                }}
                                                render={({
                                                    field: { onChange, value },
                                                }) => (
                                                    <TextInput2
                                                        placeholder="Enter your email"
                                                        value={value}
                                                        error={errors.email}
                                                        onChange={onChange}
                                                    />
                                                )}
                                                name="email"
                                            />
                                        </span>
                                    </li>
                                    <li className="w-full sm:w-1/2 p-4">
                                        <span className="w-full block">
                                            <label className="text-xs">
                                                Phone Number
                                            </label>
                                            <Controller
                                                control={control}
                                                rules={{
                                                    required:
                                                        'Phone number is required',
                                                }}
                                                render={({
                                                    field: { onChange, value },
                                                }) => (
                                                    <TextInput2
                                                        placeholder="Enter your phone number"
                                                        value={value}
                                                        error={errors.phone}
                                                        onChange={onChange}
                                                    />
                                                )}
                                                name="phone"
                                            />
                                        </span>
                                    </li>
                                    <li className="w-full p-4">
                                        <span className="w-full flex flex-wrap">
                                            <span className="w-full block pb-4 font-[700px]">
                                                Select Subject?
                                            </span>
                                            <input
                                                className="bg-transparent border-b border-solid border-[#000000]"
                                                type="radio"
                                                name="subject"
                                                id="general"
                                                checked={
                                                    subjectType === 'general'
                                                }
                                                onChange={() =>
                                                    setSubjectType('general')
                                                }
                                            />
                                            <label className="pl-2 text-xs">
                                                General Inquiry
                                            </label>
                                            <input
                                                className="bg-transparent border-b border-solid border-[#000000] ml-8"
                                                type="radio"
                                                name="subject"
                                                id="other"
                                                checked={
                                                    subjectType === 'other'
                                                }
                                                onChange={() =>
                                                    setSubjectType('other')
                                                }
                                            />
                                            <label className="pl-2 text-xs">
                                                Others
                                            </label>
                                        </span>
                                    </li>
                                    <li className="w-full p-4">
                                        <span className="w-full block">
                                            <label className="text-xs">
                                                Message
                                            </label>

                                            <Controller
                                                control={control}
                                                rules={{
                                                    required:
                                                        'Message is required',
                                                    maxLength: {
                                                        value: 1200,
                                                        message:
                                                            'Maxium length of notes is 1200 characters.',
                                                    },
                                                }}
                                                render={({
                                                    field: { onChange, value },
                                                }) => (
                                                    <TextInput2
                                                        placeholder="Write your message.."
                                                        value={value}
                                                        error={errors.message}
                                                        onChange={onChange}
                                                    />
                                                )}
                                                name="message"
                                            />
                                        </span>
                                    </li>
                                    <li className="w-full p-4 flex justify-end">
                                        <Button
                                            loading={loading}
                                            onClick={onSubmit}
                                            disabled={
                                                API_postEnquiry.loading ||
                                                loading
                                            }
                                            className="border-xs-button w-40 btn-gradient"
                                        >
                                            Message
                                        </Button>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <section id="get-in-touch" className="pt-[47px]">
                <ReadyToSellPage />
            </section>
            <section className="lg:h-[195px] bottom-0">
                <Footer />
            </section>
        </div>
    )
}

export default TermsAndConditions
